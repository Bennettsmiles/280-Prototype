/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MedicalSystem;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author Smiles
 */
public class MedicalSystemUI extends javax.swing.JFrame {

    /**
     * Creates new form MedicalSystemUI
     */
    public MedicalSystemUI() {
        initComponents();
    }
        
    String currentUser;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientSignUpGendergrp = new javax.swing.ButtonGroup();
        patientPortal = new javax.swing.JFrame();
        //Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        //    int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        //    int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        //    patientPortal.setLocation(x, y);
        patientPortalFrame = new javax.swing.JPanel();
        patientPortalMenu = new javax.swing.JPanel();
        patientPortalMenuSignIn = new javax.swing.JButton();
        patientPortalMenuBack = new javax.swing.JButton();
        patientPortalMenuTitlelbl = new javax.swing.JLabel();
        individualPatientPage = new javax.swing.JPanel();
        patientTabs = new javax.swing.JTabbedPane();
        personalPatientInformation = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        patientInformationUsernametxt = new javax.swing.JTextField();
        patientInformationFirstNametxt = new javax.swing.JTextField();
        patientInformationLastNametxt = new javax.swing.JTextField();
        patientInformationAgetxt = new javax.swing.JTextField();
        patientInformationGendertxt = new javax.swing.JTextField();
        patientInformationSocialSecuritytxt = new javax.swing.JTextField();
        patientInformationInsurancetxt = new javax.swing.JTextField();
        patientInformationBanktxt = new javax.swing.JTextField();
        patientInformationPasswordtxt = new javax.swing.JTextField();
        patientInformationEditbtn = new javax.swing.JButton();
        patientInformationCancelbtn = new javax.swing.JButton();
        MedicalInformation = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        MedicalInformationDatecbo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        MedicalInformationout = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        patientSignIn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        patientSignInUserNametxt = new javax.swing.JTextField();
        patientSignInPasswordpwd = new javax.swing.JPasswordField();
        patientSignInbtn = new javax.swing.JButton();
        patientSignInCancelbtn = new javax.swing.JButton();
        doctorPortal = new javax.swing.JFrame();
        doctorPortalFrame = new javax.swing.JPanel();
        doctorPortalMenu = new javax.swing.JPanel();
        doctorPortalMenuSignIn = new javax.swing.JButton();
        doctorPortalMenuBack = new javax.swing.JButton();
        doctorPortalMenuTitlelbl = new javax.swing.JLabel();
        doctorSignIn = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        doctorSignInUserNametxt = new javax.swing.JTextField();
        doctorSignInPasswordpwd = new javax.swing.JPasswordField();
        doctorSignInbtn = new javax.swing.JButton();
        doctorSignInCancelbtn = new javax.swing.JButton();
        individualDoctorPage = new javax.swing.JPanel();
        doctorTabs = new javax.swing.JTabbedPane();
        personalDoctorInformation = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        doctorInformationUsernametxt = new javax.swing.JTextField();
        doctorInformationFirstNametxt = new javax.swing.JTextField();
        doctorInformationLastNametxt = new javax.swing.JTextField();
        doctorInformationAgetxt = new javax.swing.JTextField();
        doctorInformationGendertxt = new javax.swing.JTextField();
        doctorInformationHospitaltxt = new javax.swing.JTextField();
        doctorInformationEducationtxt = new javax.swing.JTextField();
        patientMedicalInformation = new javax.swing.JPanel();
        doctorCbo = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane2.setVisible(false);
        doctorMedicalOutput = new javax.swing.JTextArea();
        medicalHistoryClosebtn = new javax.swing.JButton();
        medicalHistoryClosebtn.setVisible(false);
        updatePatientMedicalInformation = new javax.swing.JPanel();
        patientSelectorcbo = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        patientAppointmentSelectorcbo = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        patientAppointmentDatetxt = new javax.swing.JTextField();
        patientAppointmentLocationtxt = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        patientUpdateDetailsout = new javax.swing.JTextArea();
        jLabel28 = new javax.swing.JLabel();
        patientSubmitUpdatebtn = new javax.swing.JButton();
        optionsFrame = new javax.swing.JFrame();
        PatientPortalbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        DoctorPortalbtn = new javax.swing.JButton();

        patientPortal.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        patientPortal.setTitle("Patient Portal");
        patientPortal.setIconImages(null);
        patientPortal.setResizable(false);
        patientPortal.setSize(new java.awt.Dimension(550, 550));
        patientPortal.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                patientPortalWindowClosing(evt);
            }
        });

        patientPortalFrame.setLayout(new java.awt.CardLayout());

        patientPortalMenu.setMinimumSize(new java.awt.Dimension(240, 240));
        patientPortalMenu.setOpaque(false);
        patientPortalMenu.setPreferredSize(new java.awt.Dimension(240, 240));
        patientPortalMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientPortalMenuSignIn.setText("Sign in");
        patientPortalMenuSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientPortalMenuSignInActionPerformed(evt);
            }
        });
        patientPortalMenu.add(patientPortalMenuSignIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 96, 134, -1));

        patientPortalMenuBack.setText("Back");
        patientPortalMenuBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientPortalMenuBackActionPerformed(evt);
            }
        });
        patientPortalMenu.add(patientPortalMenuBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 161, 134, -1));

        patientPortalMenuTitlelbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patientPortalMenuTitlelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patientPortalMenuTitlelbl.setText("Patient Portal");
        patientPortalMenu.add(patientPortalMenuTitlelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 240, -1));

        patientPortalFrame.add(patientPortalMenu, "patientPortalMenu");

        individualPatientPage.setPreferredSize(new java.awt.Dimension(541, 340));

        patientTabs.setMinimumSize(new java.awt.Dimension(473, 300));
        patientTabs.setPreferredSize(new java.awt.Dimension(541, 390));
        patientTabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                patientTabsStateChanged(evt);
            }
        });

        personalPatientInformation.setPreferredSize(new java.awt.Dimension(488, 359));
        personalPatientInformation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Username:");
        personalPatientInformation.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 88, 80, -1));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("First Name:");
        personalPatientInformation.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 126, 80, -1));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Last Name:");
        personalPatientInformation.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 164, 80, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Personal Information");
        personalPatientInformation.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 468, -1));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Age:");
        personalPatientInformation.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 202, 80, -1));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Gender:");
        personalPatientInformation.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 240, 80, -1));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Social Security:");
        personalPatientInformation.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 88, 140, -1));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Insurance Policy:");
        personalPatientInformation.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 126, 140, -1));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Bank Account:");
        personalPatientInformation.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 164, 140, -1));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Password:");
        personalPatientInformation.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 202, 140, -1));

        patientInformationUsernametxt.setEnabled(false);
        personalPatientInformation.add(patientInformationUsernametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 85, 85, -1));

        patientInformationFirstNametxt.setEnabled(false);
        personalPatientInformation.add(patientInformationFirstNametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 123, 85, -1));

        patientInformationLastNametxt.setEnabled(false);
        personalPatientInformation.add(patientInformationLastNametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 161, 85, -1));

        patientInformationAgetxt.setEnabled(false);
        personalPatientInformation.add(patientInformationAgetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 199, 85, -1));

        patientInformationGendertxt.setEnabled(false);
        personalPatientInformation.add(patientInformationGendertxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 237, 87, -1));

        patientInformationSocialSecuritytxt.setEnabled(false);
        personalPatientInformation.add(patientInformationSocialSecuritytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 85, 82, -1));

        patientInformationInsurancetxt.setEnabled(false);
        personalPatientInformation.add(patientInformationInsurancetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 123, 82, -1));

        patientInformationBanktxt.setEnabled(false);
        personalPatientInformation.add(patientInformationBanktxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 161, 82, -1));

        patientInformationPasswordtxt.setEnabled(false);
        personalPatientInformation.add(patientInformationPasswordtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 199, 82, -1));

        patientInformationEditbtn.setText("Edit");
        patientInformationEditbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientInformationEditbtnActionPerformed(evt);
            }
        });
        personalPatientInformation.add(patientInformationEditbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 230, 60, -1));

        patientInformationCancelbtn.setText("Cancel");
        patientInformationCancelbtn.setEnabled(false);
        patientInformationCancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientInformationCancelbtnActionPerformed(evt);
            }
        });
        personalPatientInformation.add(patientInformationCancelbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 230, -1, -1));

        patientTabs.addTab("Personal Info", personalPatientInformation);

        MedicalInformation.setPreferredSize(new java.awt.Dimension(536, 400));
        MedicalInformation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Medical Information");
        MedicalInformation.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 536, 55));

        MedicalInformationDatecbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        MedicalInformationDatecbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicalInformationDatecboActionPerformed(evt);
            }
        });
        MedicalInformation.add(MedicalInformationDatecbo, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 73, 152, -1));

        MedicalInformationout.setEditable(false);
        MedicalInformationout.setColumns(20);
        MedicalInformationout.setRows(5);
        jScrollPane1.setViewportView(MedicalInformationout);

        MedicalInformation.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 104, 431, 218));

        patientTabs.addTab("Medical Information", MedicalInformation);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 362, Short.MAX_VALUE)
        );

        patientTabs.addTab("Financial History", jPanel1);

        javax.swing.GroupLayout individualPatientPageLayout = new javax.swing.GroupLayout(individualPatientPage);
        individualPatientPage.setLayout(individualPatientPageLayout);
        individualPatientPageLayout.setHorizontalGroup(
            individualPatientPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patientTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        individualPatientPageLayout.setVerticalGroup(
            individualPatientPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patientTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        patientPortalFrame.add(individualPatientPage, "individualPatientPage");

        patientSignIn.setMinimumSize(new java.awt.Dimension(415, 233));
        patientSignIn.setPreferredSize(new java.awt.Dimension(415, 233));
        patientSignIn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                patientSignInComponentHidden(evt);
            }
        });
        patientSignIn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Patient Sign-In");
        patientSignIn.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 415, -1));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Username:");
        patientSignIn.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 54, 83, -1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Password:");
        patientSignIn.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 97, 83, -1));
        patientSignIn.add(patientSignInUserNametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 51, 116, -1));
        patientSignIn.add(patientSignInPasswordpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 94, 116, -1));

        patientSignInbtn.setText("Sign in");
        patientSignInbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSignInbtnActionPerformed(evt);
            }
        });
        patientSignIn.add(patientSignInbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 140, -1, -1));

        patientSignInCancelbtn.setText("Cancel");
        patientSignInCancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSignInCancelbtnActionPerformed(evt);
            }
        });
        patientSignIn.add(patientSignInCancelbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 140, -1, -1));

        patientPortalFrame.add(patientSignIn, "patientSignIn");

        javax.swing.GroupLayout patientPortalLayout = new javax.swing.GroupLayout(patientPortal.getContentPane());
        patientPortal.getContentPane().setLayout(patientPortalLayout);
        patientPortalLayout.setHorizontalGroup(
            patientPortalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientPortalLayout.createSequentialGroup()
                .addComponent(patientPortalFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        patientPortalLayout.setVerticalGroup(
            patientPortalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientPortalLayout.createSequentialGroup()
                .addComponent(patientPortalFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        doctorPortal.setTitle("Doctor Portal");

        doctorPortalFrame.setLayout(new java.awt.CardLayout());

        doctorPortalMenu.setMinimumSize(new java.awt.Dimension(240, 240));
        doctorPortalMenu.setOpaque(false);
        doctorPortalMenu.setPreferredSize(new java.awt.Dimension(240, 240));
        doctorPortalMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        doctorPortalMenuSignIn.setText("Sign in");
        doctorPortalMenuSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorPortalMenuSignInActionPerformed(evt);
            }
        });
        doctorPortalMenu.add(doctorPortalMenuSignIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 96, 134, -1));

        doctorPortalMenuBack.setText("Back");
        doctorPortalMenuBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorPortalMenuBackActionPerformed(evt);
            }
        });
        doctorPortalMenu.add(doctorPortalMenuBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 161, 134, -1));

        doctorPortalMenuTitlelbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        doctorPortalMenuTitlelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctorPortalMenuTitlelbl.setText("Doctor Portal");
        doctorPortalMenu.add(doctorPortalMenuTitlelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 240, -1));

        doctorPortalFrame.add(doctorPortalMenu, "doctorPortalMenu");

        doctorSignIn.setMinimumSize(new java.awt.Dimension(415, 233));
        doctorSignIn.setPreferredSize(new java.awt.Dimension(415, 233));
        doctorSignIn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                doctorSignInComponentHidden(evt);
            }
        });
        doctorSignIn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Doctor Sign-In");
        doctorSignIn.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 415, -1));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Username:");
        doctorSignIn.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 54, 83, -1));

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Password:");
        doctorSignIn.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 97, 83, -1));
        doctorSignIn.add(doctorSignInUserNametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 51, 116, -1));
        doctorSignIn.add(doctorSignInPasswordpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 94, 116, -1));

        doctorSignInbtn.setText("Sign in");
        doctorSignInbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorSignInbtnActionPerformed(evt);
            }
        });
        doctorSignIn.add(doctorSignInbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 140, -1, -1));

        doctorSignInCancelbtn.setText("Cancel");
        doctorSignInCancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorSignInCancelbtnActionPerformed(evt);
            }
        });
        doctorSignIn.add(doctorSignInCancelbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 140, -1, -1));

        doctorPortalFrame.add(doctorSignIn, "doctorSignIn");

        individualDoctorPage.setPreferredSize(new java.awt.Dimension(541, 340));

        doctorTabs.setMinimumSize(new java.awt.Dimension(473, 300));
        doctorTabs.setPreferredSize(new java.awt.Dimension(541, 390));
        doctorTabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                doctorTabsStateChanged(evt);
            }
        });

        personalDoctorInformation.setPreferredSize(new java.awt.Dimension(488, 310));
        personalDoctorInformation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Doctor Information");
        personalDoctorInformation.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 490, -1));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Username:");
        personalDoctorInformation.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 88, 80, -1));

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("First Name:");
        personalDoctorInformation.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 126, 80, -1));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Last Name:");
        personalDoctorInformation.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 164, 80, -1));

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Age:");
        personalDoctorInformation.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 202, 80, -1));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Gender:");
        personalDoctorInformation.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 130, -1));

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Hospital:");
        personalDoctorInformation.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 140, -1));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Education:");
        personalDoctorInformation.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 140, -1));

        doctorInformationUsernametxt.setEnabled(false);
        personalDoctorInformation.add(doctorInformationUsernametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 85, 85, -1));

        doctorInformationFirstNametxt.setEnabled(false);
        personalDoctorInformation.add(doctorInformationFirstNametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 123, 85, -1));

        doctorInformationLastNametxt.setEnabled(false);
        personalDoctorInformation.add(doctorInformationLastNametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 161, 85, -1));

        doctorInformationAgetxt.setEnabled(false);
        personalDoctorInformation.add(doctorInformationAgetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 199, 85, -1));

        doctorInformationGendertxt.setEnabled(false);
        personalDoctorInformation.add(doctorInformationGendertxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 100, -1));

        doctorInformationHospitaltxt.setEnabled(false);
        personalDoctorInformation.add(doctorInformationHospitaltxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 120, 100, -1));

        doctorInformationEducationtxt.setEnabled(false);
        personalDoctorInformation.add(doctorInformationEducationtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, 100, -1));

        doctorTabs.addTab("Personal Info", personalDoctorInformation);

        patientMedicalInformation.setMinimumSize(new java.awt.Dimension(200, 263));
        patientMedicalInformation.setPreferredSize(new java.awt.Dimension(550, 200));
        patientMedicalInformation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        doctorCbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        doctorCbo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                doctorCboItemStateChanged(evt);
            }
        });
        doctorCbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorCboActionPerformed(evt);
            }
        });
        patientMedicalInformation.add(doctorCbo, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 40, 173, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Patient Medical History");
        patientMedicalInformation.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 550, -1));

        doctorMedicalOutput.setEditable(false);
        doctorMedicalOutput.setColumns(20);
        doctorMedicalOutput.setRows(5);
        jScrollPane2.setViewportView(doctorMedicalOutput);

        patientMedicalInformation.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 78, 368, 185));

        medicalHistoryClosebtn.setText("Close");
        medicalHistoryClosebtn.setEnabled(false);
        medicalHistoryClosebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalHistoryClosebtnActionPerformed(evt);
            }
        });
        patientMedicalInformation.add(medicalHistoryClosebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 70, -1));

        doctorTabs.addTab("View Patient History", patientMedicalInformation);

        updatePatientMedicalInformation.setPreferredSize(new java.awt.Dimension(536, 215));
        updatePatientMedicalInformation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientSelectorcbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        patientSelectorcbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSelectorcboActionPerformed(evt);
            }
        });
        updatePatientMedicalInformation.add(patientSelectorcbo, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 67, 165, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Update Patient Medical History");
        updatePatientMedicalInformation.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 27, 536, -1));

        patientAppointmentSelectorcbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        patientAppointmentSelectorcbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientAppointmentSelectorcboActionPerformed(evt);
            }
        });
        updatePatientMedicalInformation.add(patientAppointmentSelectorcbo, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 105, 165, -1));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Date:");
        updatePatientMedicalInformation.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 162, 80, -1));

        patientAppointmentDatetxt.setEditable(false);
        updatePatientMedicalInformation.add(patientAppointmentDatetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 159, 85, -1));

        patientAppointmentLocationtxt.setEditable(false);
        updatePatientMedicalInformation.add(patientAppointmentLocationtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(357, 159, 85, -1));

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Location:");
        updatePatientMedicalInformation.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 162, 80, -1));

        patientUpdateDetailsout.setColumns(20);
        patientUpdateDetailsout.setRows(5);
        patientUpdateDetailsout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patientUpdateDetailsoutKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(patientUpdateDetailsout);

        updatePatientMedicalInformation.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 197, 337, 154));

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Notes:");
        updatePatientMedicalInformation.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 197, 80, -1));

        patientSubmitUpdatebtn.setText("Submit");
        patientSubmitUpdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSubmitUpdatebtnActionPerformed(evt);
            }
        });
        updatePatientMedicalInformation.add(patientSubmitUpdatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 328, -1, -1));

        doctorTabs.addTab("Update Patient History", updatePatientMedicalInformation);

        javax.swing.GroupLayout individualDoctorPageLayout = new javax.swing.GroupLayout(individualDoctorPage);
        individualDoctorPage.setLayout(individualDoctorPageLayout);
        individualDoctorPageLayout.setHorizontalGroup(
            individualDoctorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(doctorTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        individualDoctorPageLayout.setVerticalGroup(
            individualDoctorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(doctorTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );

        doctorPortalFrame.add(individualDoctorPage, "individualDoctorPage");

        javax.swing.GroupLayout doctorPortalLayout = new javax.swing.GroupLayout(doctorPortal.getContentPane());
        doctorPortal.getContentPane().setLayout(doctorPortalLayout);
        doctorPortalLayout.setHorizontalGroup(
            doctorPortalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(doctorPortalFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        doctorPortalLayout.setVerticalGroup(
            doctorPortalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(doctorPortalFrame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        optionsFrame.setAlwaysOnTop(true);

        javax.swing.GroupLayout optionsFrameLayout = new javax.swing.GroupLayout(optionsFrame.getContentPane());
        optionsFrame.getContentPane().setLayout(optionsFrameLayout);
        optionsFrameLayout.setHorizontalGroup(
            optionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        optionsFrameLayout.setVerticalGroup(
            optionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Medical System");
        setLocationByPlatform(true);
        setResizable(false);

        PatientPortalbtn.setText("Patient Portal");
        PatientPortalbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PatientPortalbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientPortalbtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Medical System");

        DoctorPortalbtn.setText("Doctor Portal");
        DoctorPortalbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorPortalbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PatientPortalbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(DoctorPortalbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(124, 124, 124))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4)
                .addGap(63, 63, 63)
                .addComponent(PatientPortalbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorPortalbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PatientPortalbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientPortalbtnActionPerformed
        CardLayout cardLayout = (CardLayout) patientPortalFrame.getLayout();
        cardLayout.show(patientPortalFrame, "patientPortalMenu");
        patientPortal.setSize(patientPortalMenu.getPreferredSize());
        patientPortal.setVisible(true);
    }//GEN-LAST:event_PatientPortalbtnActionPerformed

    private void patientPortalMenuBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientPortalMenuBackActionPerformed
        patientPortal.dispose();
        patientPortal.setVisible(false);
    }//GEN-LAST:event_patientPortalMenuBackActionPerformed

    private void patientPortalMenuSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientPortalMenuSignInActionPerformed
        CardLayout cardLayout = (CardLayout) patientPortalFrame.getLayout();
        cardLayout.show(patientPortalFrame, "patientSignIn");
        patientPortal.setSize(patientSignIn.getPreferredSize());
        //patientPortal.pack();
    }//GEN-LAST:event_patientPortalMenuSignInActionPerformed

    private void patientSignInCancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSignInCancelbtnActionPerformed
        CardLayout cardLayout = (CardLayout) patientPortalFrame.getLayout();
        cardLayout.show(patientPortalFrame, "patientPortalMenu");
        patientPortal.setSize(patientPortalMenu.getPreferredSize());
    }//GEN-LAST:event_patientSignInCancelbtnActionPerformed

    private void patientSignInbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSignInbtnActionPerformed
        if(PatientDatabase.getPatientByUsername(patientSignInUserNametxt.getText()) == null){
            patientSignInPasswordpwd.setText("");
            return;
            
        }
        else if (!(PatientDatabase.getPatientByUsername(patientSignInUserNametxt.getText()).getPassword().equals(new String(patientSignInPasswordpwd.getPassword()))))
        {
          patientSignInPasswordpwd.setText("");
        }
        else if(PatientDatabase.getPatientByUsername(patientSignInUserNametxt.getText()).getPassword().equals(new String(patientSignInPasswordpwd.getPassword()))){
           
            Patient patientInfo = PatientDatabase.getPatientByUsername(patientSignInUserNametxt.getText());
            patientSignInPasswordpwd.setText("");
            CardLayout cardLayout = (CardLayout) patientPortalFrame.getLayout();
            cardLayout.show(patientPortalFrame, "individualPatientPage");
            patientPortal.setSize(personalPatientInformation.getPreferredSize());
            currentUser = patientSignInUserNametxt.getText();
            //System.out.print("Yuppers");
            patientInformationUsernametxt.setText(patientInfo.getUserName());
            patientInformationFirstNametxt.setText(patientInfo.getFirstName());
            patientInformationLastNametxt.setText(patientInfo.getLastName());
            patientInformationAgetxt.setText(Integer.toString(patientInfo.getAge()));
            patientInformationGendertxt.setText(patientInfo.getGender());
            patientInformationSocialSecuritytxt.setText(Integer.toString(patientInfo.getSocialSecurity()));
            patientInformationInsurancetxt.setText(Integer.toString(patientInfo.getInsurancePolicyNum()));
            patientInformationBanktxt.setText(Integer.toString(patientInfo.getBankAccountNum()));
            patientInformationPasswordtxt.setText("");
        }
    }//GEN-LAST:event_patientSignInbtnActionPerformed

    private void patientSignInComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_patientSignInComponentHidden
        patientSignInUserNametxt.setText("");
        patientSignInPasswordpwd.setText("");
    }//GEN-LAST:event_patientSignInComponentHidden

    private void patientInformationEditbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientInformationEditbtnActionPerformed
        if(patientInformationEditbtn.getText().equals("Edit")){
            patientInformationFirstNametxt.setEnabled(true);
            patientInformationLastNametxt.setEnabled(true);
            patientInformationAgetxt.setEnabled(true);
            patientInformationGendertxt.setEnabled(true);
            patientInformationSocialSecuritytxt.setEnabled(true);
            patientInformationInsurancetxt.setEnabled(true);
            patientInformationBanktxt.setEnabled(true);
            patientInformationPasswordtxt.setEnabled(true);
            patientInformationCancelbtn.setEnabled(true);
            patientInformationEditbtn.setText("OK");
        
        } else {
            int answer = JOptionPane.showConfirmDialog(optionsFrame, "Are you sure you want to change this information?");
            if (answer == JOptionPane.YES_OPTION) {
      
            patientInformationFirstNametxt.setEnabled(false);
            patientInformationLastNametxt.setEnabled(false);
            patientInformationAgetxt.setEnabled(false);
            patientInformationGendertxt.setEnabled(false);
            patientInformationSocialSecuritytxt.setEnabled(false);
            patientInformationInsurancetxt.setEnabled(false);
            patientInformationBanktxt.setEnabled(false);
            patientInformationPasswordtxt.setEnabled(false);
            patientInformationCancelbtn.setEnabled(false);
            patientInformationEditbtn.setText("Edit");
            
            PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setFirstName(patientInformationFirstNametxt.getText());
            PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setLastName(patientInformationLastNametxt.getText());
            PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setAge(Integer.parseInt(patientInformationAgetxt.getText()));
            PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setGender(patientInformationGendertxt.getText());
            PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setSocialSecurity(Integer.parseInt(patientInformationSocialSecuritytxt.getText()));
            PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setInsurancePolicyNum(Integer.parseInt(patientInformationInsurancetxt.getText()));
            PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setBankAccountNum(Integer.parseInt(patientInformationBanktxt.getText()));
            
            if(!(patientInformationPasswordtxt.getText().equals(""))){
                PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText()).setPassword(patientInformationPasswordtxt.getText());
            }
        } else if (answer == JOptionPane.NO_OPTION) {
            patientInformationFirstNametxt.setEnabled(false);
            patientInformationLastNametxt.setEnabled(false);
            patientInformationAgetxt.setEnabled(false);
            patientInformationGendertxt.setEnabled(false);
            patientInformationSocialSecuritytxt.setEnabled(false);
            patientInformationInsurancetxt.setEnabled(false);
            patientInformationBanktxt.setEnabled(false);
            patientInformationPasswordtxt.setEnabled(false);
            patientInformationCancelbtn.setEnabled(false);
            patientInformationEditbtn.setText("Edit");
            
            //System.out.print("Yuppers");
            
            Patient patientInfo = PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText());
            patientInformationUsernametxt.setText(patientInfo.getUserName());
            patientInformationFirstNametxt.setText(patientInfo.getFirstName());
            patientInformationLastNametxt.setText(patientInfo.getLastName());
            patientInformationAgetxt.setText(Integer.toString(patientInfo.getAge()));
            patientInformationGendertxt.setText(patientInfo.getGender());
            patientInformationSocialSecuritytxt.setText(Integer.toString(patientInfo.getSocialSecurity()));
            patientInformationInsurancetxt.setText(Integer.toString(patientInfo.getInsurancePolicyNum()));
            patientInformationBanktxt.setText(Integer.toString(patientInfo.getBankAccountNum()));
            patientInformationPasswordtxt.setText("");
        }
        }   
    }//GEN-LAST:event_patientInformationEditbtnActionPerformed

    private void patientInformationCancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientInformationCancelbtnActionPerformed
            patientInformationFirstNametxt.setEnabled(false);
            patientInformationLastNametxt.setEnabled(false);
            patientInformationAgetxt.setEnabled(false);
            patientInformationGendertxt.setEnabled(false);
            patientInformationSocialSecuritytxt.setEnabled(false);
            patientInformationInsurancetxt.setEnabled(false);
            patientInformationBanktxt.setEnabled(false);
            patientInformationPasswordtxt.setEnabled(false);
            patientInformationCancelbtn.setEnabled(false);
            patientInformationEditbtn.setText("Edit");
            
            //System.out.print("Yuppers");
            
            Patient patientInfo = PatientDatabase.getPatientByUsername(patientInformationUsernametxt.getText());
            patientInformationUsernametxt.setText(patientInfo.getUserName());
            patientInformationFirstNametxt.setText(patientInfo.getFirstName());
            patientInformationLastNametxt.setText(patientInfo.getLastName());
            patientInformationAgetxt.setText(Integer.toString(patientInfo.getAge()));
            patientInformationGendertxt.setText(patientInfo.getGender());
            patientInformationSocialSecuritytxt.setText(Integer.toString(patientInfo.getSocialSecurity()));
            patientInformationInsurancetxt.setText(Integer.toString(patientInfo.getInsurancePolicyNum()));
            patientInformationBanktxt.setText(Integer.toString(patientInfo.getBankAccountNum()));
            patientInformationPasswordtxt.setText("");
        
    }//GEN-LAST:event_patientInformationCancelbtnActionPerformed

    private void patientTabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_patientTabsStateChanged
        int tabIndex = patientTabs.getSelectedIndex();
        if(tabIndex == 0){
           patientPortal.setSize(personalPatientInformation.getPreferredSize()); 
        }
        else if(tabIndex == 1){
            patientPortal.setSize(MedicalInformation.getPreferredSize());
            MedicalInformationDatecbo.removeAllItems();
            
            ArrayList<String> medDates = MedicalHistoryDatabase.getMedicalHistoryDates(currentUser);
            for(int i = 0; i < medDates.size(); i++){
                MedicalInformationDatecbo.addItem(medDates.get(i));   
            }
        }
    }//GEN-LAST:event_patientTabsStateChanged

    private void MedicalInformationDatecboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicalInformationDatecboActionPerformed
        if(MedicalInformationDatecbo.getItemCount() != 0){
            MedicalInformationout.setText("");
            String[] content = MedicalHistoryDatabase.getMedicalHistoryContent(currentUser, MedicalInformationDatecbo.getSelectedItem().toString());
            MedicalInformationout.setText(MedicalInformationout.getText() + "Date: " + content[0] + "\n************\n");
            MedicalInformationout.setText(MedicalInformationout.getText() + "Location: " + content[2] + "\n************\n");
            MedicalInformationout.setText(MedicalInformationout.getText() + "Details: " + content[1] + "\n************\n");
        }
    }//GEN-LAST:event_MedicalInformationDatecboActionPerformed

    private void doctorPortalMenuSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorPortalMenuSignInActionPerformed
        CardLayout cardLayout = (CardLayout) doctorPortalFrame.getLayout();
        cardLayout.show(doctorPortalFrame, "doctorSignIn");
        doctorPortal.setSize(doctorSignIn.getPreferredSize());
    }//GEN-LAST:event_doctorPortalMenuSignInActionPerformed

    private void doctorPortalMenuBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorPortalMenuBackActionPerformed
        doctorPortal.dispose();
        doctorPortal.setVisible(false);
    }//GEN-LAST:event_doctorPortalMenuBackActionPerformed

    private void DoctorPortalbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorPortalbtnActionPerformed
        CardLayout cardLayout = (CardLayout) doctorPortalFrame.getLayout();
        cardLayout.show(doctorPortalFrame, "doctorPortalMenu");
        doctorPortal.setSize(doctorPortalMenu.getPreferredSize());
        doctorPortal.setVisible(true);
    }//GEN-LAST:event_DoctorPortalbtnActionPerformed

    private void doctorSignInbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorSignInbtnActionPerformed
        if(DoctorDatabase.getDoctorByUsername(doctorSignInUserNametxt.getText()) == null){
            doctorSignInPasswordpwd.setText("");
            return;
            
        }
        else if (!(DoctorDatabase.getDoctorByUsername(doctorSignInUserNametxt.getText()).getPassword().equals(new String(doctorSignInPasswordpwd.getPassword()))))
        {
          doctorSignInPasswordpwd.setText("");
        }
        else if(DoctorDatabase.getDoctorByUsername(doctorSignInUserNametxt.getText()).getPassword().equals(new String(doctorSignInPasswordpwd.getPassword()))){
           
            Doctor doctorInfo = DoctorDatabase.getDoctorByUsername(doctorSignInUserNametxt.getText());
            doctorSignInPasswordpwd.setText("");
            CardLayout cardLayout = (CardLayout) doctorPortalFrame.getLayout();
            cardLayout.show(doctorPortalFrame, "individualDoctorPage");
            doctorPortal.setSize(personalDoctorInformation.getPreferredSize());
            currentUser = doctorSignInUserNametxt.getText();
            doctorInformationUsernametxt.setText(doctorInfo.getUserName());
            doctorInformationFirstNametxt.setText(doctorInfo.getFirstName());
            doctorInformationLastNametxt.setText(doctorInfo.getLastName());
            doctorInformationAgetxt.setText(Integer.toString(doctorInfo.getAge()));
            doctorInformationGendertxt.setText(doctorInfo.getGender());
            doctorInformationHospitaltxt.setText(doctorInfo.getHospital());
            doctorInformationEducationtxt.setText(doctorInfo.getEducation());
        }
    }//GEN-LAST:event_doctorSignInbtnActionPerformed

    private void doctorSignInCancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorSignInCancelbtnActionPerformed
        CardLayout cardLayout = (CardLayout) doctorPortalFrame.getLayout();
        cardLayout.show(doctorPortalFrame, "doctorPortalMenu");
        doctorPortal.setSize(doctorPortalMenu.getPreferredSize());
    }//GEN-LAST:event_doctorSignInCancelbtnActionPerformed

    private void doctorSignInComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_doctorSignInComponentHidden
        doctorSignInUserNametxt.setText("");
        doctorSignInPasswordpwd.setText("");
    }//GEN-LAST:event_doctorSignInComponentHidden

    private void doctorTabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_doctorTabsStateChanged
        int tabIndex = doctorTabs.getSelectedIndex();
        if(tabIndex == 0){
           doctorPortal.setSize(personalDoctorInformation.getPreferredSize());
        }
        else if(tabIndex == 1){
            jScrollPane2.setVisible(false);
            doctorPortal.setSize(patientMedicalInformation.getPreferredSize());
            doctorCbo.removeAllItems();
            ArrayList<String> patients = PatientDatabase.getPatientList();
            
            for(int i = 0; i < patients.size(); i++){
                doctorCbo.addItem(patients.get(i));
            }
            doctorCbo.setSelectedIndex(-1);
        }
        else if(tabIndex == 2){
            doctorPortal.setSize(updatePatientMedicalInformation.getPreferredSize());
            patientAppointmentSelectorcbo.setVisible(false);
            
            patientSelectorcbo.removeAllItems();
            ArrayList<String> patients = PatientDatabase.getPatientList();
            
            for(int i = 0; i < patients.size(); i++){
                patientSelectorcbo.addItem(patients.get(i));
            }
            patientSelectorcbo.setSelectedIndex(-1);
            patientSubmitUpdatebtn.setEnabled(false);
        }
    }//GEN-LAST:event_doctorTabsStateChanged

    private void doctorCboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorCboActionPerformed
        if(doctorCbo.getSelectedIndex() == -1){
         doctorPortal.setSize(patientMedicalInformation.getPreferredSize());
        }
        if(doctorCbo.getSelectedIndex() != -1 && doctorCbo.getItemCount() != 0 && doctorCbo.getItemCount() != 1){
            medicalHistoryClosebtn.setVisible(true);
            medicalHistoryClosebtn.setEnabled(true);
            jScrollPane2.setVisible(true);
            doctorPortal.setSize(550, 360);
            
            ArrayList<String[]> medHistory = MedicalHistoryDatabase.getAllPatientHistory(doctorCbo.getSelectedItem().toString());
            doctorMedicalOutput.setText("");
            if (medHistory.isEmpty()){
                doctorMedicalOutput.setText("Patient has no recorded appointment in the system.");
            }else{
                for(int i = 0; i < medHistory.size(); i++){
                    doctorMedicalOutput.setText(doctorMedicalOutput.getText() + "Date: " + medHistory.get(i)[0] + "\n");
                    doctorMedicalOutput.setText(doctorMedicalOutput.getText() + "Location: " + medHistory.get(i)[2] + "\n");
                    doctorMedicalOutput.setText(doctorMedicalOutput.getText() + "Details: " + medHistory.get(i)[1] + "\n");
                    doctorMedicalOutput.setText(doctorMedicalOutput.getText() + "*******************************\n");
                }
            }
        }
    }//GEN-LAST:event_doctorCboActionPerformed

    private void doctorCboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_doctorCboItemStateChanged

       
    }//GEN-LAST:event_doctorCboItemStateChanged

    private void medicalHistoryClosebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalHistoryClosebtnActionPerformed
    jScrollPane2.setVisible(false);
    doctorPortal.setSize(patientMedicalInformation.getPreferredSize());
    medicalHistoryClosebtn.setVisible(false);
    medicalHistoryClosebtn.setEnabled(false);
    doctorCbo.setSelectedIndex(-1);
    }//GEN-LAST:event_medicalHistoryClosebtnActionPerformed

    private void patientPortalWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_patientPortalWindowClosing
        MedicalInformationout.setText("");
        MedicalInformationDatecbo.removeAllItems();
    }//GEN-LAST:event_patientPortalWindowClosing

    private void patientSelectorcboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSelectorcboActionPerformed
        if(patientSelectorcbo.getSelectedIndex() == -1){
         doctorPortal.setSize(updatePatientMedicalInformation.getPreferredSize());
         patientAppointmentSelectorcbo.setVisible(false);
        }
        if(patientSelectorcbo.getSelectedIndex() != -1 && patientSelectorcbo.getItemCount() != 0 && patientSelectorcbo.getItemCount() != 1){
            patientAppointmentSelectorcbo.setVisible(true);
            patientAppointmentSelectorcbo.removeAllItems();
            patientAppointmentSelectorcbo.setSelectedIndex(-1);
            ArrayList<String> appointments = MedicalHistoryDatabase.getMedicalHistoryDates(patientSelectorcbo.getSelectedItem().toString());
            
            if (appointments.isEmpty()){
                showMessageDialog(null, "This person has not had an appointment yet");
                patientSelectorcbo.setSelectedIndex(-1); 
            }
            else{
                for(int i = 0; i < appointments.size(); i++){
                    patientAppointmentSelectorcbo.addItem(appointments.get(i));   
                }
            
                patientAppointmentSelectorcbo.setSelectedIndex(-1);
            }
        }
    }//GEN-LAST:event_patientSelectorcboActionPerformed

    private void patientAppointmentSelectorcboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientAppointmentSelectorcboActionPerformed
        if (patientAppointmentSelectorcbo.getSelectedIndex() == -1){
            doctorPortal.setSize(updatePatientMedicalInformation.getPreferredSize());
            jLabel22.setVisible(false);
            jLabel27.setVisible(false);
            jLabel28.setVisible(false);
            patientAppointmentDatetxt.setVisible(false);
            patientAppointmentLocationtxt.setVisible(false);
            jScrollPane3.setVisible(false);
            patientUpdateDetailsout.setVisible(false);
            patientSubmitUpdatebtn.setVisible(false);
        }
        else if (/*patientAppointmentSelectorcbo.getItemCount() != 1 &&*/ patientAppointmentSelectorcbo.getSelectedIndex() != -1 && patientAppointmentSelectorcbo.getItemCount() != 0) {
            //System.out.print("helloe there");
            String[] content = MedicalHistoryDatabase.getMedicalHistoryContent(patientSelectorcbo.getSelectedItem().toString(), patientAppointmentSelectorcbo.getSelectedItem().toString());
            doctorPortal.setSize(540, 440);
            patientAppointmentDatetxt.setText(content[0]);
            patientAppointmentLocationtxt.setText(content[2]);
            patientUpdateDetailsout.setText(content[1]);
            jLabel22.setVisible(true);
            jLabel27.setVisible(true);
            jLabel28.setVisible(true);
            patientAppointmentDatetxt.setVisible(true);
            patientAppointmentLocationtxt.setVisible(true);
            jScrollPane3.setVisible(true);
            patientUpdateDetailsout.setVisible(true);
            patientSubmitUpdatebtn.setVisible(true);
        }
    }//GEN-LAST:event_patientAppointmentSelectorcboActionPerformed

    private void patientUpdateDetailsoutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientUpdateDetailsoutKeyTyped
        String[] content = MedicalHistoryDatabase.getMedicalHistoryContent(patientSelectorcbo.getSelectedItem().toString(), patientAppointmentSelectorcbo.getSelectedItem().toString());
        if (patientUpdateDetailsout.getText().equals(content[1]) && patientSubmitUpdatebtn.isEnabled()){
            patientSubmitUpdatebtn.setEnabled(false);
        }
        else if(!(patientSubmitUpdatebtn.isEnabled()))
        {
            patientSubmitUpdatebtn.setEnabled(true);
        }
    }//GEN-LAST:event_patientUpdateDetailsoutKeyTyped

    private void patientSubmitUpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSubmitUpdatebtnActionPerformed
       MedicalHistoryDatabase.updateAppointmentDetails(patientUpdateDetailsout.getText(), patientSelectorcbo.getSelectedItem().toString());
       patientSubmitUpdatebtn.setEnabled(false);
       showMessageDialog(null, "Patient Appointment Updated");
    }//GEN-LAST:event_patientSubmitUpdatebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicalSystemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicalSystemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicalSystemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicalSystemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicalSystemUI().setVisible(true);
            }
        });
        //Patient patientOne = new Patient("John", "Smith", 25, "Male", 123456789, 2468, 555555, "Password!");
        //Patient patientTwo = new Patient("Grace", "Allen", 28, "Female", 987654321, 8675, 111111, "Password!");
        
        
        PatientDatabase.addPatient(new Patient("John", "Smith", 25, "Male", 123456789, 2468, 555555, "Password!"));
        PatientDatabase.addPatient(new Patient("Grace", "Allen", 31, "Female", 987654321, 8675, 111111, "Password!"));
        PatientDatabase.addPatient(new Patient("Mike", "Tyson", 52, "Male", 987564321, 7655, 222222, "Password!"));
        
        MedicalHistoryDatabase.addMedicalHistory("jsmith", "03-05-2019", "Recieved Flue Shot\n--Dr. Wang", "St. Nicholas");
        MedicalHistoryDatabase.addMedicalHistory("jsmith", "05-18-2019", "Perscribed Painkillers\n--Dr. Harrison", "St. Matthew");
        MedicalHistoryDatabase.addMedicalHistory("jsmith", "03-05-2020", "Recieved Flue Shot\n--Dr. Wang", "St. Marcus");
        
        MedicalHistoryDatabase.addMedicalHistory("gallen", "08-12-2018", "Recieved Right Knee Surgery\n--Dr. Philips", "St. Philips");
        MedicalHistoryDatabase.addMedicalHistory("gallen", "09-30-2019", "Annual Check-up\n--Dr. Stevenson", "St. Francis");
        MedicalHistoryDatabase.addMedicalHistory("gallen", "11-01-2019", "Recieved Flu Shot\n--Dr. Choi", "St. Nicholas");
        
        DoctorDatabase.addDoctor(new Doctor("George", "Wang", 40, "Male", "Harvard", "St. Nicholas", "Password!"));
        DoctorDatabase.addDoctor(new Doctor("Brianna", "Harrison", 36, "Female", "Stanford", "St. Matthew", "Password!"));
        
        //patientRegisterTitlelbl.setText(System.getProperty("user.dir"));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DoctorPortalbtn;
    private javax.swing.JPanel MedicalInformation;
    private javax.swing.JComboBox<String> MedicalInformationDatecbo;
    private javax.swing.JTextArea MedicalInformationout;
    private javax.swing.JButton PatientPortalbtn;
    private javax.swing.JComboBox<String> doctorCbo;
    private javax.swing.JTextField doctorInformationAgetxt;
    private javax.swing.JTextField doctorInformationEducationtxt;
    private javax.swing.JTextField doctorInformationFirstNametxt;
    private javax.swing.JTextField doctorInformationGendertxt;
    private javax.swing.JTextField doctorInformationHospitaltxt;
    private javax.swing.JTextField doctorInformationLastNametxt;
    private javax.swing.JTextField doctorInformationUsernametxt;
    private javax.swing.JTextArea doctorMedicalOutput;
    private javax.swing.JFrame doctorPortal;
    private javax.swing.JPanel doctorPortalFrame;
    private javax.swing.JPanel doctorPortalMenu;
    private javax.swing.JButton doctorPortalMenuBack;
    private javax.swing.JButton doctorPortalMenuSignIn;
    private javax.swing.JLabel doctorPortalMenuTitlelbl;
    private javax.swing.JPanel doctorSignIn;
    private javax.swing.JButton doctorSignInCancelbtn;
    private javax.swing.JPasswordField doctorSignInPasswordpwd;
    private javax.swing.JTextField doctorSignInUserNametxt;
    private javax.swing.JButton doctorSignInbtn;
    private javax.swing.JTabbedPane doctorTabs;
    private javax.swing.JPanel individualDoctorPage;
    private javax.swing.JPanel individualPatientPage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton medicalHistoryClosebtn;
    private javax.swing.JFrame optionsFrame;
    private javax.swing.JTextField patientAppointmentDatetxt;
    private javax.swing.JTextField patientAppointmentLocationtxt;
    private javax.swing.JComboBox<String> patientAppointmentSelectorcbo;
    private javax.swing.JTextField patientInformationAgetxt;
    private javax.swing.JTextField patientInformationBanktxt;
    private javax.swing.JButton patientInformationCancelbtn;
    private javax.swing.JButton patientInformationEditbtn;
    private javax.swing.JTextField patientInformationFirstNametxt;
    private javax.swing.JTextField patientInformationGendertxt;
    private javax.swing.JTextField patientInformationInsurancetxt;
    private javax.swing.JTextField patientInformationLastNametxt;
    private javax.swing.JTextField patientInformationPasswordtxt;
    private javax.swing.JTextField patientInformationSocialSecuritytxt;
    private javax.swing.JTextField patientInformationUsernametxt;
    private javax.swing.JPanel patientMedicalInformation;
    private javax.swing.JFrame patientPortal;
    private javax.swing.JPanel patientPortalFrame;
    private javax.swing.JPanel patientPortalMenu;
    private javax.swing.JButton patientPortalMenuBack;
    private javax.swing.JButton patientPortalMenuSignIn;
    private javax.swing.JLabel patientPortalMenuTitlelbl;
    private javax.swing.JComboBox<String> patientSelectorcbo;
    private javax.swing.JPanel patientSignIn;
    private javax.swing.JButton patientSignInCancelbtn;
    private javax.swing.JPasswordField patientSignInPasswordpwd;
    private javax.swing.JTextField patientSignInUserNametxt;
    private javax.swing.JButton patientSignInbtn;
    private javax.swing.ButtonGroup patientSignUpGendergrp;
    private javax.swing.JButton patientSubmitUpdatebtn;
    private javax.swing.JTabbedPane patientTabs;
    private javax.swing.JTextArea patientUpdateDetailsout;
    private javax.swing.JPanel personalDoctorInformation;
    private javax.swing.JPanel personalPatientInformation;
    private javax.swing.JPanel updatePatientMedicalInformation;
    // End of variables declaration//GEN-END:variables
}
